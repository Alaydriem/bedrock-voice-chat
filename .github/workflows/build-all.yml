name: Build All Platforms

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode'
        required: false
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  # Determine which components have changed to optimize builds
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      server: ${{ steps.changes.outputs.server }}
      client: ${{ steps.changes.outputs.client }}
      common: ${{ steps.changes.outputs.common }}
      android: ${{ steps.changes.outputs.android }}
      build_mode: ${{ github.event_name == 'pull_request' && 'debug' || inputs.build_mode || 'debug' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            server:
              - 'server/**'
              - 'common/**'
              - 'migration/**'
              - 'entity/**'
              - '.github/workflows/build-server.yml'
              - '.github/workflows/build-all.yml'
            client:
              - 'client/**'
              - 'common/**'
              - '.github/workflows/build-client.yml'
              - '.github/workflows/build-all.yml'
            android:
              - 'client/**'
              - 'common/**'
              - '.github/workflows/build-android.yml'
              - '.github/workflows/build-all.yml'
            common:
              - 'common/**'

      - name: Debug change detection
        run: |
          echo "Change detection results:"
          echo "Server: ${{ steps.changes.outputs.server }}"
          echo "Client: ${{ steps.changes.outputs.client }}"
          echo "Android: ${{ steps.changes.outputs.android }}"
          echo "Common: ${{ steps.changes.outputs.common }}"
          
          # Determine build mode
          BUILD_MODE="${{ github.event_name == 'pull_request' && 'debug' || inputs.build_mode || 'debug' }}"
          echo "Build mode: $BUILD_MODE"
          echo "Trigger: ${{ github.event_name }}"

  # Build server for multiple platforms
  build-server:
    name: Build Server (${{ needs.changes.outputs.build_mode }})
    needs: changes
    if: needs.changes.outputs.server == 'true' || needs.changes.outputs.common == 'true'
    uses: ./.github/workflows/build-server.yml
    with:
      build_mode: ${{ needs.changes.outputs.build_mode }}

  # Build Android client
  build-android:
    name: Build Android Client (${{ needs.changes.outputs.build_mode }})
    needs: changes
    if: needs.changes.outputs.android == 'true' || needs.changes.outputs.client == 'true' || needs.changes.outputs.common == 'true'
    uses: ./.github/workflows/build-android.yml
    with:
      build_mode: ${{ needs.changes.outputs.build_mode }}

  # Build Windows client
  build-client:
    name: Build Windows Client (${{ needs.changes.outputs.build_mode }})
    needs: changes
    if: needs.changes.outputs.client == 'true' || needs.changes.outputs.common == 'true'
    uses: ./.github/workflows/build-client.yml
    with:
      build_mode: ${{ needs.changes.outputs.build_mode }}

  # Collect and organize all artifacts
  collect-artifacts:
    name: Collect All Artifacts
    runs-on: ubuntu-latest
    needs: [build-server, build-android, build-client]
    if: always() && (needs.build-server.result == 'success' || needs.build-android.result == 'success' || needs.build-client.result == 'success')
    steps:
      - name: Create build summary
        id: build-summary
        run: |
          echo "# 🚀 Bedrock Voice Chat - Build Summary" > build-summary.md
          echo "" >> build-summary.md
          echo "**Build Date:** $(date -u)" >> build-summary.md
          echo "**Workflow Run:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> build-summary.md
          echo "" >> build-summary.md
          
          echo "## � Build Results" >> build-summary.md
          echo "" >> build-summary.md
          echo "- **Server Status:** ${{ needs.build-server.result || 'skipped' }}" >> build-summary.md
          echo "- **Android Status:** ${{ needs.build-android.result || 'skipped' }}" >> build-summary.md
          echo "- **Windows Status:** ${{ needs.build-client.result || 'skipped' }}" >> build-summary.md
          echo "" >> build-summary.md
          
          echo "## 🔗 Individual Artifact Downloads" >> build-summary.md
          echo "" >> build-summary.md
          echo "Each component has its own artifact package with original filenames preserved:" >> build-summary.md
          echo "" >> build-summary.md
          
          if [ "${{ needs.build-server.result }}" = "success" ]; then
            echo "### 🖥️ Server Builds" >> build-summary.md
            echo "- [x86_64-pc-windows-msvc-debug](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) - Windows Server (.exe)" >> build-summary.md
            echo "- [x86_64-unknown-linux-gnu-debug](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) - Linux Server" >> build-summary.md
            echo "" >> build-summary.md
          fi
          
          if [ "${{ needs.build-android.result }}" = "success" ]; then
            echo "### 📱 Android Client" >> build-summary.md
            echo "- [android-debug](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) - Android APK/AAB files" >> build-summary.md
            echo "" >> build-summary.md
          fi
          
          if [ "${{ needs.build-client.result }}" = "success" ]; then
            echo "### 🪟 Windows Client" >> build-summary.md
            echo "- [windows-debug](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) - Windows EXE/MSI/Installer" >> build-summary.md
            echo "" >> build-summary.md
          fi
          
          echo "---" >> build-summary.md
          echo "*All artifacts retain their original filenames with proper extensions*" >> build-summary.md
          echo "" >> build-summary.md
          echo "*Artifacts are retained for 30 days*" >> build-summary.md
          
          cat build-summary.md

      - name: Upload build summary
        uses: actions/upload-artifact@v4
        with:
          name: build-summary
          path: build-summary.md
          retention-days: 30

      - name: Final build summary
        run: |
          echo "🎉 ==============================================="
          echo "🎉   BEDROCK VOICE CHAT - BUILD COMPLETE!"
          echo "🎉 ==============================================="
          echo ""
          echo "📊 Build Results:"
          echo "   • Server: ${{ needs.build-server.result || 'skipped' }}"
          echo "   • Android: ${{ needs.build-android.result || 'skipped' }}"
          echo "   • Windows: ${{ needs.build-client.result || 'skipped' }}"
          echo ""
          echo "📦 Individual Artifact Downloads:"
          echo "   Each component has its own package with original filenames:"
          echo ""
          if [ "${{ needs.build-server.result }}" = "success" ]; then
            echo "   🖥️  Server: x86_64-pc-windows-msvc-debug & x86_64-unknown-linux-gnu-debug"
          fi
          if [ "${{ needs.build-android.result }}" = "success" ]; then
            echo "   📱 Android: android-debug (contains .apk/.aab files)"
          fi
          if [ "${{ needs.build-client.result }}" = "success" ]; then
            echo "   🪟 Windows: windows-debug (contains .exe/.msi files)"
          fi
          echo ""
          echo "🔗 Download from: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "⏰ Retention Period: 30 days"
          echo "🎉 ==============================================="